<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Sinclair User 39 - Books</title>
<link rel="stylesheet" type="text/css" href="../shared/general.css">
<meta name="keywords" content="Sinclair, ZX80, ZX81, Spectrum, QL">
<meta name="description" content="Book reviews from Sinclair User, June 1985">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
</head>
<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" alink="#FF0000" vlink="#660099">

<p align="center" class="first"><a href="advent.htm"><img src="../shared/images/lbutton.gif" width=15 height=19 border=0 alt="Adventure"></a>
<a href="index.htm"><img src="../shared/images/hbutton.gif" width=15 height=19 border=0 alt="Issue 39 Contents"></a>
<a href="../040/index.htm"><img src="../shared/images/rbutton.gif" width=15 height=19 border=0 alt="Issue 40"></a></p>

<table border="1" cellpadding="10" align="right">
<tr><td><font size="+2"><b>Books</b></font></td></tr>
</table>

<hr noshade>
<br clear=all>
<br>

<h1>Talking with Lisp</h1>

<p class="first">FOR THOSE of you who think that Lisp has certain oral connotations then <i>Lisp - The Language of Artificial Intelligence</i>, by Dr A A Berk, will he a re-education.</p>

<p>The book gives a general grounding in the language structure of Lisp and provides information on how it can be used to simulate artificial intelligence in any microcomputer.</p>

<p>The introduction to AI at the beginning of the book is sparse and to the point. It starts with a definition of AI, describing it within the context of machine intelligence, and that hoary old computer chestnut, the Turing test of machine AI. A general description of Lisp is then given showing how its simple language constructs are flexible enough for the programming of AI applications, such as the construction of coherent responses to user input and the manipulation of data to produce new output, or results.</p>

<p>The central section of the book is a list of the function types which can be used with Lisp and an explanation of how to use those to build your own functions.</p>

<p>You will find that in some ways Lisp's structure is similar to that of Forth. You can build several program routines - called functions - which can then be used in other function routines. You can even allow functions to call themselves into action. That is called recursion and, because of its importance to the usage of the language, has been allocated a long section towards the end of the book.</p>

<p>Finally, Dr Berk deals with the advanced features of the language and those which you can build into it. Some of those may not be available on your version of Lisp but the language should be so flexible, and easy enough to understand, that you should have no trouble in making your definitions of some of them.</p>

<p>An appendix at the back gives a list of standard Lisp functions so you can see just how your version of the language matches the original specification.</p>

<p>Dr Berk, or the publisher of the book, has made one error. Little information is given as to the origins of Lisp which was developed in the Sixties and has since been adapted to fit the needs of investigators into AI.</p>

<p>Despite that oversight, the book is a first-class tutorial on the subject and will be of use to anybody in language other than Basic, or in AI.</p>
<br clear=all>

<table border="0" cellpadding="1" align="left"><tr><td bgcolor="#000000">
<table border="0" cellpadding="5" bgcolor="#FFFFFF">
<tr><td><b>Publisher</b> Collins<br>
<b>Price</b> &#163;9.95 (paperback)</td></tr>
</table></td></tr></table>

<p align="right"><b><i>John Gilbert</i></b></p>
<br clear=all><br>

<img src="books.gif" width=175 height=259 hspace=10 vspace=10 border=0 align="right" alt="Computing in Print">
<h2>The Computer book book</h2>

<p class="first">THE LATEST issue of <i>Computing in Print</i> has just been published. Its publisher, Neat Quest, describes it as 'an up-to-date computer bibliography' and contains 2200 entries across a broad range of subjects.</p>

<p>There are 19 sections in all, listing books on such subjects as languages, computer awareness, business, robotics and engineering. Book entries include the title, author, price, and the international book code, ISBN, should you ever want to order it.</p>

<p>Each entry takes a classification of the type of reader suited to the book, from beginners to A level students, into account.</p>

<p>The information contained within the bibliography is up-to-date but, of course, only at the time of going to press. It is, therefore, not a complete list of books and if you want a text on a fairly esoteric subject you would be better off going to a book shop with a microfiche film reference machine.</p>
<br clear=all>

<table border="0" cellpadding="1" align="left"><tr><td bgcolor="#000000">
<table border="0" cellpadding="5" bgcolor="#FFFFFF">
<tr><td><b>Publisher</b> Neat Quest<br>
<b>Price</b> &#163;2.95</td></tr>
</table></td></tr></table>

<p align="right"><b><i>John Gilbert</i></b></p>
<br clear=all><br>

<h2>The last word in Basic</h2>

<p class="first">IT WAS with a sense of d&eacute;j&agrave; vu that we picked up the <i>Century Computer Programming Course for the Spectrum</i>.</p>

<p><a href="../016/books.htm">We have reviewed the course before</a> but this book edited by Professor Peter Morse and Brian Hancock, is a revised version of 544 pages. There are eight pages of contents which show that the book is split up into Basic programming, advanced Basic programming, and a series of applications programs, all of which are neatly explained using flowcharts and words.</p>

<p>For all its size the book only refers to Basic, so if you want to learn about machine code programming on the Spectrum then you should look elsewhere. That said the book contains just about everything you are ever likely to want to know about Basic structure and its usage. The editors have even included sections on different types of sort and search methods and one of the most understandable explanations of Spectrum graphics and screen displays ever to be published.</p>

<p>The two sections which really catch the eye are Memory Organisation and The Microdrive. The former gives a thorough explanation of how Basic programs are stored and manipulated in memory.</p>

<p>The section on microdrives gives a simple explanation of how they work with Interface One using examples every step of the way. As well as all the explanations of its usage full documentation on both microdrives and Interface One is included.</p>

<p>The book's style is lucid, although not particularly sparkling, and there are enough programs to break up the text into manageable chunks.</p>
<br clear=all>

<table border="0" cellpadding="1" align="left"><tr><td bgcolor="#000000">
<table border="0" cellpadding="5" bgcolor="#FFFFFF">
<tr><td><b>Publisher</b> Century<br>
<b>Price</b> &#163;12.95</td></tr>
</table></td></tr></table>

<p align="right"><b><i>John Gilbert</i></b></p>
<br clear=all><br>

<center><hr width="50%" noshade></center>

<p align="center" class="first"><a href="advent.htm"><img src="../shared/images/lbutton.gif" width=15 height=19 border=0 alt="Adventure"></a>
<a href="index.htm"><img src="../shared/images/hbutton.gif" width=15 height=19 border=0 alt="Issue 39 Contents"></a>
<a href="../040/index.htm"><img src="../shared/images/rbutton.gif" width=15 height=19 border=0 alt="Issue 40"></a></p>

<h6 align="center">Sinclair User<br>June 1985</h6>

</body>
</html>

